/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/~__root'
import { Route as UnauthenticatedImport } from './routes/~_unauthenticated'
import { Route as AuthenticatedImport } from './routes/~_authenticated'
import { Route as IndexImport } from './routes/~index'
import { Route as UnauthenticatedSignupImport } from './routes/~_unauthenticated/~signup'
import { Route as UnauthenticatedLoginImport } from './routes/~_unauthenticated/~login'
import { Route as AuthenticatedProfileImport } from './routes/~_authenticated/~profile'
import { Route as AuthenticatedHomeImport } from './routes/~_authenticated/~home'

// Create/Update Routes

const UnauthenticatedRoute = UnauthenticatedImport.update({
  id: '/_unauthenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const UnauthenticatedSignupRoute = UnauthenticatedSignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => UnauthenticatedRoute,
} as any)

const UnauthenticatedLoginRoute = UnauthenticatedLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => UnauthenticatedRoute,
} as any)

const AuthenticatedProfileRoute = AuthenticatedProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedHomeRoute = AuthenticatedHomeImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => AuthenticatedRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/_unauthenticated': {
      id: '/_unauthenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof UnauthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/home': {
      id: '/_authenticated/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof AuthenticatedHomeImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/profile': {
      id: '/_authenticated/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthenticatedProfileImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_unauthenticated/login': {
      id: '/_unauthenticated/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof UnauthenticatedLoginImport
      parentRoute: typeof UnauthenticatedImport
    }
    '/_unauthenticated/signup': {
      id: '/_unauthenticated/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof UnauthenticatedSignupImport
      parentRoute: typeof UnauthenticatedImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedRouteChildren {
  AuthenticatedHomeRoute: typeof AuthenticatedHomeRoute
  AuthenticatedProfileRoute: typeof AuthenticatedProfileRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedHomeRoute: AuthenticatedHomeRoute,
  AuthenticatedProfileRoute: AuthenticatedProfileRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

interface UnauthenticatedRouteChildren {
  UnauthenticatedLoginRoute: typeof UnauthenticatedLoginRoute
  UnauthenticatedSignupRoute: typeof UnauthenticatedSignupRoute
}

const UnauthenticatedRouteChildren: UnauthenticatedRouteChildren = {
  UnauthenticatedLoginRoute: UnauthenticatedLoginRoute,
  UnauthenticatedSignupRoute: UnauthenticatedSignupRoute,
}

const UnauthenticatedRouteWithChildren = UnauthenticatedRoute._addFileChildren(
  UnauthenticatedRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof UnauthenticatedRouteWithChildren
  '/home': typeof AuthenticatedHomeRoute
  '/profile': typeof AuthenticatedProfileRoute
  '/login': typeof UnauthenticatedLoginRoute
  '/signup': typeof UnauthenticatedSignupRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof UnauthenticatedRouteWithChildren
  '/home': typeof AuthenticatedHomeRoute
  '/profile': typeof AuthenticatedProfileRoute
  '/login': typeof UnauthenticatedLoginRoute
  '/signup': typeof UnauthenticatedSignupRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/_unauthenticated': typeof UnauthenticatedRouteWithChildren
  '/_authenticated/home': typeof AuthenticatedHomeRoute
  '/_authenticated/profile': typeof AuthenticatedProfileRoute
  '/_unauthenticated/login': typeof UnauthenticatedLoginRoute
  '/_unauthenticated/signup': typeof UnauthenticatedSignupRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '' | '/home' | '/profile' | '/login' | '/signup'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '' | '/home' | '/profile' | '/login' | '/signup'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/_unauthenticated'
    | '/_authenticated/home'
    | '/_authenticated/profile'
    | '/_unauthenticated/login'
    | '/_unauthenticated/signup'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  UnauthenticatedRoute: typeof UnauthenticatedRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  UnauthenticatedRoute: UnauthenticatedRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "~__root.tsx",
      "children": [
        "/",
        "/_authenticated",
        "/_unauthenticated"
      ]
    },
    "/": {
      "filePath": "~index.tsx"
    },
    "/_authenticated": {
      "filePath": "~_authenticated.tsx",
      "children": [
        "/_authenticated/home",
        "/_authenticated/profile"
      ]
    },
    "/_unauthenticated": {
      "filePath": "~_unauthenticated.tsx",
      "children": [
        "/_unauthenticated/login",
        "/_unauthenticated/signup"
      ]
    },
    "/_authenticated/home": {
      "filePath": "~_authenticated/~home.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/profile": {
      "filePath": "~_authenticated/~profile.tsx",
      "parent": "/_authenticated"
    },
    "/_unauthenticated/login": {
      "filePath": "~_unauthenticated/~login.tsx",
      "parent": "/_unauthenticated"
    },
    "/_unauthenticated/signup": {
      "filePath": "~_unauthenticated/~signup.tsx",
      "parent": "/_unauthenticated"
    }
  }
}
ROUTE_MANIFEST_END */
